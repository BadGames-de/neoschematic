plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

group = 'dev.efnilite'
version = '1.1.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven {
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
}

configurations {
    serverTestImplementation
    testJarImplementation {
        extendsFrom testImplementation
        canBeResolved = true
    }
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT'
    implementation 'org.jetbrains:annotations:24.1.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.junit.platform:junit-platform-engine:1.10.0'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.2.0'

    implementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    implementation 'org.junit.platform:junit-platform-engine:1.10.0'
    implementation 'org.junit.platform:junit-platform-launcher:1.2.0'

    serverTestImplementation 'com.google.code.gson:gson:2.11.0'
}

tasks.register('testJar', ShadowJar) {
    archiveFileName = 'neoschematic-test.jar'
    from sourceSets.main.output, sourceSets.test.output
    configurations = [project.configurations.testJarImplementation]
}

def testVersion = "1.18.2"
def testJavaVersion = 17

tasks.register('serverTest', JavaExec) {
    dependsOn testJar

    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(testJavaVersion)
    }

    classpath = files([
            sourceSets.main.runtimeClasspath,
            configurations.serverTestImplementation,
    ])

    mainClass = 'dev.efnilite.neoschematic.test.TestPlatform'
    args = [
            testVersion,
            'build/test',
            'src/test/dev/efnilite/neoschematic',
            'src/test/resources/'
    ]
}